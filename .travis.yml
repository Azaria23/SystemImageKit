language: cpp
compiler: gcc
sudo: require
dist: trusty

install:
  - sudo apt-get -y install util-linux dosfstools mtools kpartx grub-pc grub-common # grub-efi-amd64 conflicts grub-pc

script:
  - # set -e # Stop on errors, https://github.com/travis-ci/travis-ci/issues/1066
  - cd ..
  - wget -c "https://raw.githubusercontent.com/Outernet-Project/dir2fat32/master/dir2fat32.sh"
  - bash -e dir2fat32.sh boot.img 33 SystemImageKit
  - # http://nairobi-embedded.org/making_a_qemu_disk_image_bootable_with_grub.html#installing-grub-in-the-disk-image
  - sudo kpartx -av boot.img 
  - sudo mkdir mnt
  - sudo losetup /dev/loop1 /dev/mapper/loop0p1
  - sudo mount /dev/loop1 mnt
  - sudo find ./mnt/
  - sudo grub-install --no-floppy --boot-directory=./mnt/boot /dev/loop0
  - sudo apt-get -y remove grub-pc 
  - sudo apt-get -y install grub-efi-amd64
  - sudo grub-install --target=x86_64-efi --efi-directory=./mnt/boot/EFI --boot-directory=./mnt/boot/ /dev/loop0 || true
  - # May need https://superuser.com/a/200442
  - find /mnt
  - sudo mkdir -p ./mnt/EFI/BOOT
  - sudo wget -c "http://ftp.scientificlinux.org/linux/fedora/releases/18/Fedora/x86_64/os/EFI/BOOT/grubx64.efi" -O ./mnt/EFI/BOOT/bootx64.efi
  - # sudo mv ./mnt/boot/EFI/*/grubx64.efi ./mnt/EFI/BOOT/bootx64.efi
  - sudo bash -e ./mnt/boot/iso/additional-initramfs/generate # Generate additional initrd (gets loaded in addition to the one on the ISO)
  - sudo find ./mnt/
  - sudo touch mnt/boot/grub/grub.cfg # Because it is empty?
  - sudo ./mnt/boot/bin/detect # Configure bootloader
  - sudo find ./mnt/boot/bin/generate-appimaged* -exec bash {} \; # Create and install ExtensionImage
  - sudo umount ./mnt
  - sudo losetup -d /dev/loop1
  - sudo kpartx -v -d /dev/loop0
  - ls -lh .
  - mkdir -p BootImage
  - mv boot.img BootImage/
  - VERSION=$(cd SystemImageKit ; git rev-parse --short HEAD)
  - ( cd BootImage/ ; tar cfvj ../BootImage-VERSION-x86_64.tar.bz2 boot.img )
  - DLD=$(wget -q "https://github.com/resin-io/etcher/releases" -O - | grep linux-x86_64.zip | head -n 1 | cut -d '"' -f 2)
  - wget -c "https://github.com/$DLD" # Workaround for https://github.com/resin-io/etcher/issues/1893
  - unzip etcher-*-linux-x86_64.zip
  - EVERSION=$(ls etcher-*x86_64.AppImage | cut -d "-" -f 2)
  - mv etcher-1.2.0-x86_64.AppImage Etcher-$EVERSION-x86_64.AppImage

after_success:
  - wget -c https://github.com/probonopd/uploadtool/raw/master/upload.sh
  - bash upload.sh ./BootImage-* Etcher-*AppImage
  
branches:
  except:
    - # Do not build tags that we create when we upload to GitHub Releases
    - /^(?i:continuous)/
